{"ast":null,"code":"var _jsxFileName = \"/Users/Alex/WCS/Projects/TrivProject2/TriviaGame/src/Components/Challenge.js\";\nimport React from \"react\";\nimport QandA from \"./QandA\";\n\nclass Challenge extends React.Component {\n  constructor(props) {\n    super(props);\n  } // // map1 from live code\n  // const TaskList = ({ tasks, onClickTask }) => (\n  //     <ul>\n  //         {tasks.map((task) => (\n  //             <Task key={task.text} task={task} onClickTask={onClickTask}/>\n  //         ))}\n  //     </ul>\n  // )\n  // // map2 from live code\n  // handleToggleDone = (clickedTask) => {\n  //   this.setState(\n  //     (state) => {\n  //       const qP = state.tasks.map((task) => {\n  //         if(task.text === clickedTask.text) {\n  //           // change is done\n  //           task.isDone = !task.isDone;\n  //         }\n  //         return task;\n  //       })\n  //       return {\n  //         ...state,\n  //         tasks: updatedTasks\n  //       }\n  //     },\n  //     () => localStorage.setItem('tasks', JSON.stringify(this.state.tasks))\n  //   )\n  // }\n\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"This is the challenge container\"), React.createElement(\"div\", {\n      className: \"ui cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(QandA, {\n      questionPackages: this.props.questionPackages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Next Question\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Challenge;","map":{"version":3,"sources":["/Users/Alex/WCS/Projects/TrivProject2/TriviaGame/src/Components/Challenge.js"],"names":["React","QandA","Challenge","Component","constructor","props","render","questionPackages"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD,GAHqC,CAMxC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAQEC,EAAAA,MAAM,GAAG;AAEP,WACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADF,EAEE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGE,oBAAC,KAAD;AAAO,MAAA,gBAAgB,EAAE,KAAKD,KAAL,CAAWE,gBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF,CAFF,CADF;AAgBD;;AA9DqC;;AAiExC,eAAeL,SAAf","sourcesContent":["import React from \"react\";\nimport QandA from \"./QandA\";\n\nclass Challenge extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n\n// // map1 from live code\n\n// const TaskList = ({ tasks, onClickTask }) => (\n//     <ul>\n//         {tasks.map((task) => (\n//             <Task key={task.text} task={task} onClickTask={onClickTask}/>\n//         ))}\n//     </ul>\n// )\n\n// // map2 from live code\n// handleToggleDone = (clickedTask) => {\n//   this.setState(\n//     (state) => {\n\n//       const qP = state.tasks.map((task) => {\n//         if(task.text === clickedTask.text) {\n//           // change is done\n//           task.isDone = !task.isDone;\n//         }\n//         return task;\n//       })\n\n//       return {\n//         ...state,\n//         tasks: updatedTasks\n//       }\n//     },\n//     () => localStorage.setItem('tasks', JSON.stringify(this.state.tasks))\n//   )\n// }\n\n\n\n\n\n\n\n  render() {\n\n    return (\n      <>\n        <p>This is the challenge container</p>\n        <div className=\"ui cards\">\n          <div className=\"card\">\n            <div className=\"content\"></div>\n\n            <QandA questionPackages={this.props.questionPackages} />\n            \n            <br />\n            <button>Next Question</button>\n            <br />\n          </div>\n        </div>\n      </>\n    );\n  };\n}\n\nexport default Challenge;\n"]},"metadata":{},"sourceType":"module"}