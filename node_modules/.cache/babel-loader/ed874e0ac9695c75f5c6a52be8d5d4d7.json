{"ast":null,"code":"var _jsxFileName = \"/home/edward/Documents/QuizProject/src/App.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Challenge from \"./Components/Challenge\";\nimport LandingPage from \"./Pages/LandingPage\";\nimport CategoryWheel from \"./Pages/CategoryWheel\";\nimport Scoreboard from \"./Pages/Scoreboard\"; // App component\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchQuestions = () => {\n      const randomCategory = Math.floor(Math.random() * Math.floor(24)) + 9;\n      console.log(randomCategory);\n      fetch(\"https://opentdb.com/api.php?amount=10&category=\".concat(randomCategory)).then(res => res.json()).then(results => {\n        this.setState({\n          questionPackages: results,\n          category: results.results[0].category\n        });\n      });\n    };\n\n    this.state = {\n      category: \"\",\n      questionPackages: []\n    };\n  }\n\n  render() {\n    // console.log(this.state.questionPackages);\n    // console.log(this.state.category);\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"LandingPage\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/CategoryWheel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"CategoryWheel\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/Challenge\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Challenge\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/Scoreboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Scoreboard\")))), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(LandingPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })), React.createElement(Route, {\n      exact: true,\n      path: \"/CategoryWheel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(CategoryWheel, {\n      fetchQuestions: this.fetchQuestions,\n      categoryName: this.state.category,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(Route, {\n      exact: true,\n      path: \"/Challenge\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Challenge, {\n      Information: \"this is some info\",\n      questionsPackages: this.state.questionPac,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), React.createElement(Route, {\n      exact: true,\n      path: \"/Scoreboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Scoreboard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })))));\n  }\n\n} // Dummy questions array\n// const questionArray = [\n//   {\n//     category: \"General Knowledge\",\n//     type: \"multiple\",\n//     difficulty: \"hard\",\n//     question:\n//       \"What type of dog is &#039;Handsome Dan&#039;, the mascot of Yale University?\",\n//     correct_answer: \"Bulldog\",\n//     incorrect_answers: [\"Yorkshire Terrier\", \"Boxer\", \"Pug\"]\n//   },\n// ]\n\n\nexport default App;","map":{"version":3,"sources":["/home/edward/Documents/QuizProject/src/App.js"],"names":["React","BrowserRouter","Router","Switch","Route","Link","Challenge","LandingPage","CategoryWheel","Scoreboard","App","Component","constructor","props","fetchQuestions","randomCategory","Math","floor","random","console","log","fetch","then","res","json","results","setState","questionPackages","category","state","render","questionPac"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,IAAjD,QAA6D,kBAA7D;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,UAAP,MAAuB,oBAAvB,C,CAEA;;AAEA,MAAMC,GAAN,SAAkBV,KAAK,CAACW,SAAxB,CAAiC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAQlBC,cARkB,GAQD,MAAM;AACrB,YAAMC,cAAc,GAAIC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACC,KAAL,CAAW,EAAX,CAA3B,IAA6C,CAArE;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYL,cAAZ;AAEAM,MAAAA,KAAK,0DAAmDN,cAAnD,EAAL,CACGO,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,OAAO,IAAI;AACf,aAAKC,QAAL,CAAc;AACZC,UAAAA,gBAAgB,EAAEF,OADN;AAEZG,UAAAA,QAAQ,EAAEH,OAAO,CAACA,OAAR,CAAgB,CAAhB,EAAmBG;AAFjB,SAAd;AAID,OAPH;AAQC,KApBe;;AAEhB,SAAKC,KAAL,GAAa;AACXD,MAAAA,QAAQ,EAAE,EADC;AAEXD,MAAAA,gBAAgB,EAAE;AAFP,KAAb;AAID;;AAgBDG,EAAAA,MAAM,GAAG;AACP;AACA;AACF,WACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,gBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CALF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,YAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CARF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CAXF,CAFF,CADF,EAsBE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AAAe,MAAA,cAAc,EAAE,KAAKhB,cAApC;AAAoD,MAAA,YAAY,EAAE,KAAKe,KAAL,CAAWD,QAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,EAOE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,SAAD;AACE,MAAA,WAAW,EAAC,mBADd;AAEE,MAAA,iBAAiB,EAAE,KAAKC,KAAL,CAAWE,WAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAPF,EAaE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAbF,CAtBF,CADF,CADF;AA4CA;;AAtE+B,C,CAyEjC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,eAAerB,GAAf","sourcesContent":["import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Challenge from \"./Components/Challenge\";\nimport LandingPage from \"./Pages/LandingPage\";\nimport CategoryWheel from \"./Pages/CategoryWheel\";\nimport Scoreboard from \"./Pages/Scoreboard\";\n\n// App component\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      category: \"\",\n      questionPackages: []\n    }\n  }\n\n  fetchQuestions = () => {\n    const randomCategory = (Math.floor(Math.random() * Math.floor(24)) + 9);\n    console.log(randomCategory);\n  \n    fetch(`https://opentdb.com/api.php?amount=10&category=${randomCategory}`)\n      .then(res => res.json())\n      .then(results => {\n        this.setState({\n          questionPackages: results,\n          category: results.results[0].category\n        });\n      })\n    };\n\n  render() { \n    // console.log(this.state.questionPackages);\n    // console.log(this.state.category);\n  return (\n    <Router>\n      <div>\n        <nav>\n    \n          <ul>\n            <li>\n              <Link to=\"/\">LandingPage</Link>\n       \n            </li>\n            <li>\n              <Link to=\"/CategoryWheel\">CategoryWheel</Link>\n            </li>\n            <li>\n              <Link to=\"/Challenge\">Challenge</Link>\n            </li>\n            <li>\n              <Link to=\"/Scoreboard\">Scoreboard</Link>\n            </li>\n          </ul>\n        </nav>\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route exact path=\"/\">\n            <LandingPage />\n          </Route>\n          <Route exact path=\"/CategoryWheel\">\n            <CategoryWheel fetchQuestions={this.fetchQuestions} categoryName={this.state.category}/>\n          </Route>\n          <Route exact path=\"/Challenge\">\n          <Challenge\n            Information=\"this is some info\"\n            questionsPackages={this.state.questionPac}\n          />\n          </Route>\n          <Route exact path=\"/Scoreboard\">\n            <Scoreboard />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n }\n}\n\n// Dummy questions array\n\n// const questionArray = [\n//   {\n//     category: \"General Knowledge\",\n//     type: \"multiple\",\n//     difficulty: \"hard\",\n//     question:\n//       \"What type of dog is &#039;Handsome Dan&#039;, the mascot of Yale University?\",\n//     correct_answer: \"Bulldog\",\n//     incorrect_answers: [\"Yorkshire Terrier\", \"Boxer\", \"Pug\"]\n//   },\n// ]\n\n\nexport default App"]},"metadata":{},"sourceType":"module"}