{"ast":null,"code":"var _jsxFileName = \"/home/edward/Documents/QuizProject/src/Components/QandA.js\";\nimport React from \"react\";\nimport QuestionBox from \"./QuestionBox\";\nimport AnswerButs from \"./AnswerButs\";\n\nconst QandA = props => {\n  // const questionPackage = props.questionPackage;\n  // const correctAnswerPosition1 = Math.floor(Math.random() * Math.floor(4));\n  // const answersArray = questionPackage.incorrect_answers;\n  // const emptyMixer = answersArray.splice(\n  //   correctAnswerPosition1,\n  //   0, //   questionPackage.correct_answer\n  // );\n  // selecting one question from the question package in position [1]\n  const oneQuestion = props.questionPackages[1].question;\n  console.log(oneQuestion); // generating one random number from 0, 1, 2, 3\n\n  const randomPosition = Math.floor(Math.random() * Math.floor(4));\n  console.log(randomPosition); // correct answer from the question package in position [0]\n\n  const correctAnswer = props.questionPackages[0].correct_answer;\n  console.log(correctAnswer); // takes the incorrect answers from the question package in position [0]\n\n  AnswersArray = props.questionPackages[0].incorrect_answers;\n  const emptyMixer = answersArray.splice(randomPosition, 0, correctAnswer); // takes the incorrect answers from the question package in position [0]\n\n  const AnswersArray = props.questionPackages[0].incorrect_answers.splice(randomPosition, 0, correctAnswer);\n  console.log(AnswersArray); // const all4Answers = wrongAnswersArray;\n  // console.log(All4Answers);\n  // console.log(o);\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"This is the Q&A container\"), React.createElement(\"div\", {\n    className: \"ui cards\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"meta\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"...\"), React.createElement(\"div\", {\n    className: \"question\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(QuestionBox, {\n    questionStr: props.questionPackages.question,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }))))));\n};\n\nexport default QandA;","map":{"version":3,"sources":["/home/edward/Documents/QuizProject/src/Components/QandA.js"],"names":["React","QuestionBox","AnswerButs","QandA","props","oneQuestion","questionPackages","question","console","log","randomPosition","Math","floor","random","correctAnswer","correct_answer","AnswersArray","incorrect_answers","emptyMixer","answersArray","splice"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACE;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,QAAMC,WAAW,GAAGD,KAAK,CAACE,gBAAN,CAAuB,CAAvB,EAA0BC,QAA9C;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ,EAbF,CAeE;;AACA,QAAMK,cAAc,GAAGC,IAAI,CAACC,KAAL,CACrBD,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACC,KAAL,CAAW,CAAX,CADK,CAAvB;AAIAJ,EAAAA,OAAO,CAACC,GAAR,CAAYC,cAAZ,EApBF,CAsBE;;AACA,QAAMI,aAAa,GACjBV,KAAK,CAACE,gBAAN,CAAuB,CAAvB,EAA0BS,cAD5B;AAGAP,EAAAA,OAAO,CAACC,GAAR,CAAYK,aAAZ,EA1BF,CA4BE;;AAEAE,EAAAA,YAAY,GACVZ,KAAK,CAACE,gBAAN,CAAuB,CAAvB,EAA0BW,iBAD5B;AAGA,QAAMC,UAAU,GAAGC,YAAY,CAACC,MAAb,CACjBV,cADiB,EAEjB,CAFiB,EAGjBI,aAHiB,CAAnB,CAjCF,CAuCE;;AACA,QAAME,YAAY,GAAGZ,KAAK,CAACE,gBAAN,CAAuB,CAAvB,EAA0BW,iBAA1B,CAA4CG,MAA5C,CACnBV,cADmB,EAEnB,CAFmB,EAGnBI,aAHmB,CAArB;AAMAN,EAAAA,OAAO,CAACC,GAAR,CAAYO,YAAZ,EA9CF,CAgDE;AAEA;AAEA;;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,EAEE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AACE,IAAA,WAAW,EACTZ,KAAK,CAACE,gBAAN,CAAuBC,QAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF,CADF,CAFF,CADF;AAoBD,CA1ExB;;AA4EA,eAAeJ,KAAf","sourcesContent":["import React from \"react\";\nimport QuestionBox from \"./QuestionBox\";\nimport AnswerButs from \"./AnswerButs\";\n\nconst QandA = props => {\n                         // const questionPackage = props.questionPackage;\n\n                         // const correctAnswerPosition1 = Math.floor(Math.random() * Math.floor(4));\n                         // const answersArray = questionPackage.incorrect_answers;\n                         // const emptyMixer = answersArray.splice(\n                         //   correctAnswerPosition1,\n                         //   0, //   questionPackage.correct_answer\n                         // );\n\n                         // selecting one question from the question package in position [1]\n                         const oneQuestion = props.questionPackages[1].question;\n\n                         console.log(oneQuestion);\n\n                         // generating one random number from 0, 1, 2, 3\n                         const randomPosition = Math.floor(\n                           Math.random() * Math.floor(4)\n                         );\n\n                         console.log(randomPosition);\n\n                         // correct answer from the question package in position [0]\n                         const correctAnswer =\n                           props.questionPackages[0].correct_answer;\n\n                         console.log(correctAnswer);\n\n                         // takes the incorrect answers from the question package in position [0]\n\n                         AnswersArray =\n                           props.questionPackages[0].incorrect_answers;\n\n                         const emptyMixer = answersArray.splice(\n                           randomPosition,\n                           0,\n                           correctAnswer\n                         );\n\n                         // takes the incorrect answers from the question package in position [0]\n                         const AnswersArray = props.questionPackages[0].incorrect_answers.splice(\n                           randomPosition,\n                           0,\n                           correctAnswer\n                         );\n\n                         console.log(AnswersArray);\n\n                         // const all4Answers = wrongAnswersArray;\n\n                         // console.log(All4Answers);\n\n                         // console.log(o);\n\n                         return (\n                           <div>\n                             <p>This is the Q&A container</p>\n                             <div className=\"ui cards\">\n                               <div className=\"card\">\n                                 <div className=\"content\">\n                                   <div className=\"meta\">...</div>\n                                   <div className=\"question\">\n                                     <QuestionBox\n                                       questionStr={\n                                         props.questionPackages.question\n                                       }\n                                     />\n                                     {/* <AnswerButs mixedAnswers={answersArray} /> */}\n                                   </div>\n                                 </div>\n                               </div>\n                             </div>\n                           </div>\n                         );\n                       };\n\nexport default QandA;\n"]},"metadata":{},"sourceType":"module"}